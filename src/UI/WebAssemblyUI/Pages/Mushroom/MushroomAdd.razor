@page "/mushroom/add"
@using UI.ApiLibrary.ApiEndpoints
@using UI.ApiLibrary.Dto
@using UI.ApiLibrary.Dto.Mushroom;
@inject IMushroomEndpoint MushroomEndpoint
@inject NavigationManager NavManager
@attribute [Authorize(Roles = "moderator")]

<h3>Add a new Mushroom</h3>

<div class="container-fluid">
    <EditForm Model="Mushroom" OnValidSubmit="ExecuteAdd" class="">
            <DataAnnotationsValidator />

        <div class="form-group row">
            <label for="Name" class="col-sm-2 col-form-label">Name: </label>
            <div class="col-sm-10">
                <InputText id="Title" class="form-control" @bind-Value="Mushroom.Name" />
                <ValidationMessage For="@(() => Mushroom.Name)" />
            </div>
        </div>
        <div class="form-group row">
            <label for="Description" class="col-sm-2 col-form-label">Description: </label>
            <div class="col-sm-10">
                <InputText id="Description" class="form-control" @bind-Value="Mushroom.Description" />
                <ValidationMessage For="@(() => Mushroom.Description)" />
            </div>
        </div>
        <div class="form-group row">
            <label for="IsPoisonous" class="col-sm-2 col-form-label">IsPoisonous: </label>
            <div class="col-sm-10">
                <InputCheckbox id="IsActive" class="form-check-input" type="checkbox" @bind-Value="Mushroom.IsPoisonous" />
                <ValidationMessage For="@(() => Mushroom.IsPoisonous)" />
            </div>
        </div>
        <div class="form-group row">
            <label for="PhotoUrl" class="col-sm-2 col-form-label">PhotoUrl: </label>
            <div class="col-sm-10">
                <InputText id="Province" class="form-control" @bind-Value="Mushroom.PhotoUrl" />
                <ValidationMessage For="@(() => Mushroom.PhotoUrl)" />
            </div>
        </div>

        <br />
        <div class="col-md-12 text-rigth">
            <button type="submit" class="btn btn-outline-success">Save Changes</button>
        </div>
    </EditForm>
</div>>
@code {
    private MushroomDto Mushroom = new MushroomDto();

    private async Task ExecuteAdd()
    {
        try
        {
            if (Mushroom.PhotoUrl is null)
            {
                Mushroom.PhotoUrl = "";
            }

            await MushroomEndpoint.Add(Mushroom);
            //todo: inform about success
            NavManager.NavigateTo("mushrooms");

        }
        catch (Exception ex)
        {
            //todo show error message
            Console.WriteLine(ex.Message);
        }
    }
}
