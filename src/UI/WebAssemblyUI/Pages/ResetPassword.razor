@page "/resetPassword"
@using System.Web;
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager
@inject NotificationService NotificationService

<h3>Reset Password</h3>
<br />

<EditForm Model="model" OnValidSubmit="ExecutePasswordReset">
    <DataAnnotationsValidator />

    <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label">New Password: </label>
        <div class="col-md-10">
            <InputText type="password" id="password" class="form-control" @bind-Value="model.Password" />
            <ValidationMessage For="@(() => model.Password)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="confirm-password" class="col-md-2 col-form-label">Confirm Password: </label>
        <div class="col-md-10">
            <InputText type="password" id="confirm-password" class="form-control" @bind-Value="model.ConfirmPassword" />
            <ValidationMessage For="@(() => model.ConfirmPassword)" />
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-12 text-rigth">
            <button type="submit" class="btn btn-success">Reset</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string Token { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string Email { get; set; }

    public ResetPasswordModel model = new();


    private async Task ExecutePasswordReset()
    {
        model.Token = Token;
        model.Email = Email;
        
        try
        {
            await AuthService.ResetPassword(model);
            var message = new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Password Reset",
                Detail = "Password has been successfully changed",
                Duration = 4000
            };
            NotificationService.Notify(message);
            NavManager.NavigateTo("");
        }
        catch(Exception ex)
        {
            var message = new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Password Reset Error",
                Detail = ex.Message,
                Duration = 4000
            };
            NotificationService.Notify(message);
        }
    }
}
