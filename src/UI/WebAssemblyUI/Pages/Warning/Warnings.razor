@page "/warnings"
@using UI.ApiLibrary.ApiEndpoints
@using UI.ApiLibrary.Dto
@using WebAssemblyUI.Models
@inject NavigationManager NavManager
@inject IWarningsEndpoint WarningsEndpoint

<div class="row g-3">
    <div class="col-auto">
        <h3>Warnings</h3>
    </div>
    @if (IsUserExperienced || IsUserModerator)
    {
        <div class="col-auto ">
            <button type="button" class="btn btn-outline-success" @onclick="AddWarning">
                +Add
            </button>
        </div>
    }
    <div class="col-md-auto ">
        <button type="button" class="btn btn-outline-secondary" @onclick="ShowApprovedOnly">
            Show approved only
        </button>
    </div>
    <div class="col-sm-auto ">
        <button type="button" class="btn btn-outline-secondary" @onclick="HideInactive">
            Hide inactive
        </button>
    </div>
    <div class="col-sm-auto ">
        <button type="button" class="btn btn-outline-secondary" @onclick="ShowAll">
            Show all
        </button>
    </div>
</div>
<br />
<div class="container-fluid">
    @if (warnings is null)
    {
        <div class="row">
            <p>Please wait, loading...</p>    
        </div>

        <!--skeleton loader-->
        <div class="row">
            @for (int i = 0; i < 5; i++)
            {
                <div class="col-xl-4 col-lg-6 mb-3">
                    <div class="container">
                        <div class="row">
                            <div class="col-12">
                                <a>
                                    <img src="https://dummyimage.com/1200x900/000/ffffff&text=Loading" class="img-fluid" alt="Placeholder image" />
                                    <!--- <img src="@($"{api}{product.ProductImageUrl}")" class="img-fluid" alt="@product.ProductName" />    --->
                                </a>
                                <p class="my-2 text-justify placeholder-glow">
                                    <span class="placeholder col-6"></span>
                                </p>
                                <p class="mb-1 placeholder-glow">
                                    <span class="placeholder col-7"></span>
                                </p>
                                <p class="mb-1 placeholder-glow">
                                    <span class="placeholder col-7"></span>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class=col-12 placeholder-glow">
                                <p class="h5 mb-3">             
                                    <span class="placeholder col-5"></span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var warning in warnings)
            {
                <div class="col-xl-4 col-lg-6 mb-3">
                    <div class="container">
                        <div class="row">
                            <div class="col-12">
                                <a href="@($"/warning/{warning.Id}")">
                                    <img src="https://dummyimage.com/1200x900/000/ffffff&text=Warning" class="img-fluid" alt="Placeholder image" />
                                    <!--- <img src="@($"{api}{product.ProductImageUrl}")" class="img-fluid" alt="@product.ProductName" />    --->
                                </a>
                                <p class="my-2 text-justify">
                                    @warning.Title
                                </p>
                                <p class="mb-1">
                                    <strong>Date:</strong> @warning.Date
                                </p>
                                <p class="mb-1"><font color="green">Approves: @warning.ApproveNumber</font>  | <font color="#ff4122">Disapproves: @warning.DisapproveNumber</font></p>
                            </div>
                        </div>
                        <div class="row">
                            <div class=col-12>
                                <p class="h5 mb-3">IsActive: @warning.IsActive</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

</div>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    //todo: move add button to the left
    //todo: move editform to standalone component
    private List<WarningDto> warnings;
    private List<WarningDto> allWarnings;

    private bool IsUserModerator = false;
    private bool IsUserExperienced = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            warnings = await WarningsEndpoint.GetAll();
            allWarnings = warnings;

            IsUserModerator = (await AuthState).User.IsInRole("moderator");
            IsUserExperienced = (await AuthState).User.IsInRole("experienced");
        }
        catch (Exception ex)
        {
            //todo: redirect to error page
        }
    }

    private void AddWarning()
    {
        NavManager.NavigateTo("/warnings/add");
    }

    private void ShowApprovedOnly()
    {
        warnings = warnings.Where(x => x.ApproveNumber - x.DisapproveNumber >= 2).ToList();
    }

    private void ShowAll()
    {
        warnings = allWarnings;
    }

    private void HideInactive()
    {
        warnings = warnings.Where(x => x.IsActive == true).ToList();
    }
}
