// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using User.Infrastructure.Ef.Context;

#nullable disable

namespace User.Infrastructure.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20230108010706_AddsUserFriendManyToManyTable")]
    partial class AddsUserFriendManyToManyTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("User.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("_createdDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("_emailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EmailAddress");

                    b.Property<string>("_firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.Property<string>("_lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("_photoUrl")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PhotoUrl");

                    b.Property<string>("_profileDescription")
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProfileDescription");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("User.Domain.Entity.UserFriend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("FriendId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FriendId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFriend", (string)null);
                });

            modelBuilder.Entity("User.Domain.Entity.UserFriend", b =>
                {
                    b.HasOne("User.Domain.Entity.User", "Friend")
                        .WithMany("_friendToUsers")
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("User.Domain.Entity.User", "User")
                        .WithMany("_friends")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("User.Domain.Entity.User", b =>
                {
                    b.Navigation("_friendToUsers");

                    b.Navigation("_friends");
                });
#pragma warning restore 612, 618
        }
    }
}
